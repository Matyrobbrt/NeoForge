on:
  pull_request:
    types: [synchronize, opened]
  push:
    branches:
      - 1.20.x
name: Build PRs
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout Repository'
        uses: actions/checkout@main
        with:
          fetch-depth: 0

      - name: Get Current Job Log URL
        uses: Tiryoh/gha-jobid-action@v0
        id: jobs
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          job_name: 'build'

      - name: Set build status to pending
        uses: ./.github/actions/status_first
        with: 
          job-id: ${{ steps.jobs.outputs.job_id }}
          step-id: 11
          check-name: CI Build
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set compat checks status to pending
        uses: ./.github/actions/status_first
        with: 
          job-id: ${{ steps.jobs.outputs.job_id }}
          step-id: 13
          check-name: CI Compatibility checks
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set checks status to pending
        uses: ./.github/actions/status_first
        with: 
          job-id: ${{ steps.jobs.outputs.job_id }}
          step-id: 15
          check-name: CI Checks
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set patch correctness status to pending
        uses: ./.github/actions/status_first
        with: 
          job-id: ${{ steps.jobs.outputs.job_id }}
          step-id: 17
          check-name: Patch Correctness
          token: ${{ secrets.GITHUB_TOKEN }}
      
      
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
      - name: Make gradlew executable
        run: chmod +x ./gradlew
      - run: ./gradlew setup
      
      - id: build
        name: Build the PR
        run: ./gradlew build
      - if: success() || failure()
        name: Set build status
        uses: ./.github/actions/status
        with: 
          outcome: ${{ steps.build.outcome }}
          job-id: ${{ steps.jobs.outputs.job_id }}
          step-id: 11
          check-name: CI Build
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - run: ./gradlew checkJarCompatibility
        id: compat-checks
      - if: success() || failure()
        name: Set compat checks status
        uses: ./.github/actions/status
        with: 
          outcome: ${{ steps.compat-checks.outcome }}
          job-id: ${{ steps.jobs.outputs.job_id }}
          step-id: 13
          check-name: CI Compatibility checks
          token: ${{ secrets.GITHUB_TOKEN }}

      - run: ./gradlew checkAll
        id: checks
      - if: success() || failure()
        name: Set checks status
        uses: ./.github/actions/status
        with: 
          outcome: ${{ steps.checks.outcome }}
          job-id: ${{ steps.jobs.outputs.job_id }}
          step-id: 15
          check-name: CI Checks
          token: ${{ secrets.GITHUB_TOKEN }}

      - run: ./gradlew :forge:genPatches failGitChanges
        id: patch-correctness
      - if: success() || failure()
        name: Set patch corrrectness status
        uses: ./.github/actions/status
        with: 
          outcome: ${{ steps.patch-correctness.outcome }}
          job-id: ${{ steps.jobs.outputs.job_id }}
          step-id: 17
          check-name: Patch Correctness
          token: ${{ secrets.GITHUB_TOKEN }}
