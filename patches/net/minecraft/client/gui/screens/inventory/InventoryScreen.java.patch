--- a/net/minecraft/client/gui/screens/inventory/InventoryScreen.java
+++ b/net/minecraft/client/gui/screens/inventory/InventoryScreen.java
@@ -118,32 +_,52 @@
     ) {
         float f = (float)(x1 + x2) / 2.0F;
         float f1 = (float)(y1 + y2) / 2.0F;
-        guiGraphics.enableScissor(x1, y1, x2, y2);
         float f2 = (float)Math.atan((double)((f - mouseX) / 40.0F));
         float f3 = (float)Math.atan((double)((f1 - mouseY) / 40.0F));
+        // Forge: Allow passing in direct angle components instead of mouse position
+        renderEntityInInventoryFollowsAngle(guiGraphics, x1, y1, x2, y2, scale, yOffset, f2, f3, entity);
+    }
+
+    public static void renderEntityInInventoryFollowsAngle(
+        GuiGraphics p_282802_,
+        int p_275688_,
+        int p_275245_,
+        int p_275535_,
+        int p_294406_,
+        int p_294663_,
+        float p_275604_,
+        float angleXComponent,
+        float angleYComponent,
+        LivingEntity p_275689_
+    ) {
+        float f = (float)(p_275688_ + p_275535_) / 2.0F;
+        float f1 = (float)(p_275245_ + p_294406_) / 2.0F;
+        p_282802_.enableScissor(p_275688_, p_275245_, p_275535_, p_294406_);
+        float f2 = angleXComponent;
+        float f3 = angleYComponent;
         Quaternionf quaternionf = new Quaternionf().rotateZ((float) Math.PI);
         Quaternionf quaternionf1 = new Quaternionf().rotateX(f3 * 20.0F * (float) (Math.PI / 180.0));
         quaternionf.mul(quaternionf1);
-        float f4 = entity.yBodyRot;
-        float f5 = entity.getYRot();
-        float f6 = entity.getXRot();
-        float f7 = entity.yHeadRotO;
-        float f8 = entity.yHeadRot;
-        entity.yBodyRot = 180.0F + f2 * 20.0F;
-        entity.setYRot(180.0F + f2 * 40.0F);
-        entity.setXRot(-f3 * 20.0F);
-        entity.yHeadRot = entity.getYRot();
-        entity.yHeadRotO = entity.getYRot();
-        float f9 = entity.getScale();
-        Vector3f vector3f = new Vector3f(0.0F, entity.getBbHeight() / 2.0F + yOffset * f9, 0.0F);
-        float f10 = (float)scale / f9;
-        renderEntityInInventory(guiGraphics, f, f1, f10, vector3f, quaternionf, quaternionf1, entity);
-        entity.yBodyRot = f4;
-        entity.setYRot(f5);
-        entity.setXRot(f6);
-        entity.yHeadRotO = f7;
-        entity.yHeadRot = f8;
-        guiGraphics.disableScissor();
+        float f4 = p_275689_.yBodyRot;
+        float f5 = p_275689_.getYRot();
+        float f6 = p_275689_.getXRot();
+        float f7 = p_275689_.yHeadRotO;
+        float f8 = p_275689_.yHeadRot;
+        p_275689_.yBodyRot = 180.0F + f2 * 20.0F;
+        p_275689_.setYRot(180.0F + f2 * 40.0F);
+        p_275689_.setXRot(-f3 * 20.0F);
+        p_275689_.yHeadRot = p_275689_.getYRot();
+        p_275689_.yHeadRotO = p_275689_.getYRot();
+        float f9 = p_275689_.getScale();
+        Vector3f vector3f = new Vector3f(0.0F, p_275689_.getBbHeight() / 2.0F + p_275604_ * f9, 0.0F);
+        float f10 = (float)p_294663_ / f9;
+        renderEntityInInventory(p_282802_, f, f1, f10, vector3f, quaternionf, quaternionf1, p_275689_);
+        p_275689_.yBodyRot = f4;
+        p_275689_.setYRot(f5);
+        p_275689_.setXRot(f6);
+        p_275689_.yHeadRotO = f7;
+        p_275689_.yHeadRot = f8;
+        p_282802_.disableScissor();
     }
 
     public static void renderEntityInInventory(
