--- a/net/minecraft/server/level/ServerEntity.java
+++ b/net/minecraft/server/level/ServerEntity.java
@@ -101,9 +_,9 @@
 
         if (this.entity instanceof ItemFrame itemframe && this.tickCount % 10 == 0) {
             ItemStack itemstack = itemframe.getItem();
-            if (itemstack.getItem() instanceof MapItem) {
+            if (true) {
                 MapId mapid = itemstack.get(DataComponents.MAP_ID);
-                MapItemSavedData mapitemsaveddata = MapItem.getSavedData(mapid, this.level);
+                MapItemSavedData mapitemsaveddata = MapItem.getSavedData(itemstack, this.level);
                 if (mapitemsaveddata != null) {
                     for (ServerPlayer serverplayer : this.level.players()) {
                         mapitemsaveddata.tickCarriedBy(serverplayer, itemstack);
@@ -233,31 +_,34 @@
     public void removePairing(ServerPlayer player) {
         this.entity.stopSeenByPlayer(player);
         player.connection.send(new ClientboundRemoveEntitiesPacket(this.entity.getId()));
+        net.neoforged.neoforge.event.EventHooks.onStopEntityTracking(this.entity, player);
     }
 
     public void addPairing(ServerPlayer player) {
         List<Packet<? super ClientGamePacketListener>> list = new ArrayList<>();
-        this.sendPairingData(player, list::add);
+        this.sendPairingData(player, new net.neoforged.neoforge.network.bundle.PacketAndPayloadAcceptor<>(list::add));
         player.connection.send(new ClientboundBundlePacket(list));
         this.entity.startSeenByPlayer(player);
+        net.neoforged.neoforge.event.EventHooks.onStartEntityTracking(this.entity, player);
     }
 
-    public void sendPairingData(ServerPlayer player, Consumer<Packet<ClientGamePacketListener>> consumer) {
+    public void sendPairingData(ServerPlayer p_289562_, net.neoforged.neoforge.network.bundle.PacketAndPayloadAcceptor<net.minecraft.network.protocol.game.ClientGamePacketListener> p_289563_) {
         if (this.entity.isRemoved()) {
             LOGGER.warn("Fetching packet for removed entity {}", this.entity);
         }
 
         Packet<ClientGamePacketListener> packet = this.entity.getAddEntityPacket(this);
-        consumer.accept(packet);
+        p_289563_.accept(packet);
+        this.entity.sendPairingData(p_289562_, p_289563_::accept);
         if (this.trackedDataValues != null) {
-            consumer.accept(new ClientboundSetEntityDataPacket(this.entity.getId(), this.trackedDataValues));
+            p_289563_.accept(new ClientboundSetEntityDataPacket(this.entity.getId(), this.trackedDataValues));
         }
 
         boolean flag = this.trackDelta;
         if (this.entity instanceof LivingEntity) {
             Collection<AttributeInstance> collection = ((LivingEntity)this.entity).getAttributes().getSyncableAttributes();
             if (!collection.isEmpty()) {
-                consumer.accept(new ClientboundUpdateAttributesPacket(this.entity.getId(), collection));
+                p_289563_.accept(new ClientboundUpdateAttributesPacket(this.entity.getId(), collection));
             }
 
             if (((LivingEntity)this.entity).isFallFlying()) {
@@ -266,7 +_,7 @@
         }
 
         if (flag && !(this.entity instanceof LivingEntity)) {
-            consumer.accept(new ClientboundSetEntityMotionPacket(this.entity.getId(), this.lastSentMovement));
+            p_289563_.accept(new ClientboundSetEntityMotionPacket(this.entity.getId(), this.lastSentMovement));
         }
 
         if (this.entity instanceof LivingEntity) {
@@ -280,20 +_,20 @@
             }
 
             if (!list.isEmpty()) {
-                consumer.accept(new ClientboundSetEquipmentPacket(this.entity.getId(), list));
+                p_289563_.accept(new ClientboundSetEquipmentPacket(this.entity.getId(), list));
             }
         }
 
         if (!this.entity.getPassengers().isEmpty()) {
-            consumer.accept(new ClientboundSetPassengersPacket(this.entity));
+            p_289563_.accept(new ClientboundSetPassengersPacket(this.entity));
         }
 
         if (this.entity.isPassenger()) {
-            consumer.accept(new ClientboundSetPassengersPacket(this.entity.getVehicle()));
+            p_289563_.accept(new ClientboundSetPassengersPacket(this.entity.getVehicle()));
         }
 
         if (this.entity instanceof Leashable leashable && leashable.isLeashed()) {
-            consumer.accept(new ClientboundSetEntityLinkPacket(this.entity, leashable.getLeashHolder()));
+            p_289563_.accept(new ClientboundSetEntityLinkPacket(this.entity, leashable.getLeashHolder()));
         }
     }
 
